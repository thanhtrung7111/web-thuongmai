import {
  require_react_is
} from "./chunk-PSLZBDRK.js";
import {
  require_react
} from "./chunk-64YSJXBX.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS,
  __toESM
} from "./chunk-WGAPYIUP.js";

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports, module) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i = 0; i < 10; i++) {
          test2["_" + String.fromCharCode(i)] = i;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
          return test2[n];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s = 1; s < arguments.length; s++) {
        from = Object(arguments[s]);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from, symbols[i])) {
              to[symbols[i]] = from[symbols[i]];
            }
          }
        }
      }
      return to;
    };
  }
});

// node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// node_modules/prop-types/lib/has.js
var require_has = __commonJS({
  "node_modules/prop-types/lib/has.js"(exports, module) {
    module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }
});

// node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/prop-types/checkPropTypes.js"(exports, module) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = require_has();
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error(
                  (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
                );
                err.name = "Invariant Violation";
                throw err;
              }
              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            if (error && !(error instanceof Error)) {
              printWarning(
                (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
              );
            }
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning(
                "Failed " + location + " type: " + error.message + (stack != null ? stack : "")
              );
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module.exports = checkPropTypes;
  }
});

// node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    var ReactIs = require_react_is();
    var assign = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }
      function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
              );
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
              manualPropTypeWarningCount < 3) {
                printWarning(
                  "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                );
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError(
              "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
              { expectedType }
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning(
                "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
              );
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has(propValue, key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== "function") {
            printWarning(
              "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + "."
            );
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
            var checker2 = arrayOfTypeCheckers[i2];
            var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError(
          (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
        );
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has(shapeTypes, key) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError(
                "Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
              );
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/prop-types/index.js"(exports, module) {
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// node_modules/react-required-if/index.js
var require_react_required_if = __commonJS({
  "node_modules/react-required-if/index.js"(exports, module) {
    module.exports = function requiredIf(type, condition) {
      return function(props) {
        var test = condition(props) ? type.isRequired : type;
        return test.apply(this, arguments);
      };
    };
  }
});

// node_modules/isobject/index.js
var require_isobject = __commonJS({
  "node_modules/isobject/index.js"(exports, module) {
    "use strict";
    module.exports = function isObject(val) {
      return val != null && typeof val === "object" && Array.isArray(val) === false;
    };
  }
});

// node_modules/is-plain-object/index.js
var require_is_plain_object = __commonJS({
  "node_modules/is-plain-object/index.js"(exports, module) {
    "use strict";
    var isObject = require_isobject();
    function isObjectObject(o) {
      return isObject(o) === true && Object.prototype.toString.call(o) === "[object Object]";
    }
    module.exports = function isPlainObject(o) {
      var ctor, prot;
      if (isObjectObject(o) === false)
        return false;
      ctor = o.constructor;
      if (typeof ctor !== "function")
        return false;
      prot = ctor.prototype;
      if (isObjectObject(prot) === false)
        return false;
      if (prot.hasOwnProperty("isPrototypeOf") === false) {
        return false;
      }
      return true;
    };
  }
});

// node_modules/is-extendable/index.js
var require_is_extendable = __commonJS({
  "node_modules/is-extendable/index.js"(exports, module) {
    "use strict";
    var isPlainObject = require_is_plain_object();
    module.exports = function isExtendable(val) {
      return isPlainObject(val) || typeof val === "function" || Array.isArray(val);
    };
  }
});

// node_modules/object.omit/index.js
var require_object = __commonJS({
  "node_modules/object.omit/index.js"(exports, module) {
    "use strict";
    var isObject = require_is_extendable();
    module.exports = function omit2(obj, props, fn) {
      if (!isObject(obj))
        return {};
      if (typeof props === "function") {
        fn = props;
        props = [];
      }
      if (typeof props === "string") {
        props = [props];
      }
      var isFunction = typeof fn === "function";
      var keys = Object.keys(obj);
      var res = {};
      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        var val = obj[key];
        if (!props || props.indexOf(key) === -1 && (!isFunction || fn(val, key, obj))) {
          res[key] = val;
        }
      }
      return res;
    };
  }
});

// node_modules/react-image-magnify/node_modules/react-cursor-position/dist/es/utils/addEventListener.js
function addEventListener(node, eventName, handler, options) {
  node.addEventListener(eventName, handler, options);
  return {
    removeEventListener: function removeEventListener() {
      node.removeEventListener(eventName, handler, options);
    }
  };
}
var init_addEventListener = __esm({
  "node_modules/react-image-magnify/node_modules/react-cursor-position/dist/es/utils/addEventListener.js"() {
  }
});

// browser-external:constants
var require_constants = __commonJS({
  "browser-external:constants"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "constants" has been externalized for browser compatibility. Cannot access "constants.${key}" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// node_modules/react-image-magnify/node_modules/react-cursor-position/dist/es/utils/noop.js
var noop_default;
var init_noop = __esm({
  "node_modules/react-image-magnify/node_modules/react-cursor-position/dist/es/utils/noop.js"() {
    noop_default = function() {
    };
  }
});

// node_modules/react-image-magnify/node_modules/react-cursor-position/dist/es/ReactCursorPosition.js
var ReactCursorPosition_exports = {};
__export(ReactCursorPosition_exports, {
  default: () => ReactCursorPosition_default
});
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var import_react, import_prop_types, import_object_assign, import_object, constants, _createClass, _class, ReactCursorPosition_default;
var init_ReactCursorPosition = __esm({
  "node_modules/react-image-magnify/node_modules/react-cursor-position/dist/es/ReactCursorPosition.js"() {
    import_react = __toESM(require_react());
    import_prop_types = __toESM(require_prop_types());
    import_object_assign = __toESM(require_object_assign());
    import_object = __toESM(require_object());
    init_addEventListener();
    constants = __toESM(require_constants());
    init_noop();
    _createClass = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    _class = function(_React$Component) {
      _inherits(_class2, _React$Component);
      function _class2(props) {
        _classCallCheck(this, _class2);
        var _this = _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).call(this, props));
        _this.state = {
          detectedEnvironment: {
            isMouseDetected: false,
            isTouchDetected: false
          },
          elementDimensions: {
            width: 0,
            height: 0
          },
          isActive: false,
          isPositionOutside: true,
          position: {
            x: 0,
            y: 0
          }
        };
        _this.shouldGuardAgainstMouseEmulationByDevices = false;
        _this.eventListeners = [];
        _this.timers = [];
        _this.elementOffset = {
          x: 0,
          y: 0
        };
        _this.onTouchStart = _this.onTouchStart.bind(_this);
        _this.onTouchMove = _this.onTouchMove.bind(_this);
        _this.onTouchEnd = _this.onTouchEnd.bind(_this);
        _this.onTouchCancel = _this.onTouchCancel.bind(_this);
        _this.onMouseEnter = _this.onMouseEnter.bind(_this);
        _this.onMouseMove = _this.onMouseMove.bind(_this);
        _this.onMouseLeave = _this.onMouseLeave.bind(_this);
        return _this;
      }
      _createClass(_class2, [{
        key: "onTouchStart",
        value: function onTouchStart(e) {
          var position = this.getDocumentRelativePosition(this.getTouchEvent(e));
          this.init();
          this.onTouchDetected();
          this.setShouldGuardAgainstMouseEmulationByDevices();
          this.setPositionState(position);
          if (this.props.isActivatedOnTouch) {
            e.preventDefault();
            this.activate();
            return;
          }
          this.initPressEventCriteria(position);
          this.setPressEventTimer();
        }
      }, {
        key: "onTouchMove",
        value: function onTouchMove(e) {
          var position = this.getDocumentRelativePosition(this.getTouchEvent(e));
          if (!this.state.isActive) {
            this.setPressEventCriteria(position);
            return;
          }
          this.setPositionState(position);
          e.preventDefault();
        }
      }, {
        key: "onTouchEnd",
        value: function onTouchEnd() {
          this.deactivate();
          this.unsetShouldGuardAgainstMouseEmulationByDevices();
        }
      }, {
        key: "onTouchCancel",
        value: function onTouchCancel() {
          this.deactivate();
          this.unsetShouldGuardAgainstMouseEmulationByDevices();
        }
      }, {
        key: "onMouseEnter",
        value: function onMouseEnter(e) {
          if (this.shouldGuardAgainstMouseEmulationByDevices) {
            return;
          }
          this.init();
          this.onMouseDetected();
          this.setPositionState(this.getDocumentRelativePosition(e));
          this.clearActivationTimers();
          this.schedulActivation(this.props.hoverDelayInMs);
        }
      }, {
        key: "onMouseMove",
        value: function onMouseMove(e) {
          this.setPositionState(this.getDocumentRelativePosition(e));
        }
      }, {
        key: "onMouseLeave",
        value: function onMouseLeave() {
          this.clearActivationTimers();
          this.scheduleDeactivation(this.props.hoverOffDelayInMs);
          this.setState({ isPositionOutside: true });
        }
      }, {
        key: "onTouchDetected",
        value: function onTouchDetected() {
          var environment = {
            isTouchDetected: true,
            isMouseDetected: false
          };
          this.setState({ detectedEnvironment: environment });
          this.props.onDetectedEnvironmentChanged(environment);
        }
      }, {
        key: "onMouseDetected",
        value: function onMouseDetected() {
          var environment = {
            isTouchDetected: false,
            isMouseDetected: true
          };
          this.setState({ detectedEnvironment: environment });
          this.props.onDetectedEnvironmentChanged(environment);
        }
      }, {
        key: "componentDidMount",
        value: function componentDidMount() {
          this.addEventListeners();
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.clearTimers();
          this.removeEventListeners();
        }
      }, {
        key: "init",
        value: function init() {
          var _getDocumentRelativeE = this.getDocumentRelativeElementOffset(this.el), x = _getDocumentRelativeE.x, y = _getDocumentRelativeE.y, w = _getDocumentRelativeE.w, h = _getDocumentRelativeE.h;
          this.elementOffset = { x, y };
          this.setElementDimensionsState({ width: w, height: h });
        }
      }, {
        key: "activate",
        value: function activate() {
          this.setState({ isActive: true });
          this.props.onActivationChanged({ isActive: true });
        }
      }, {
        key: "deactivate",
        value: function deactivate() {
          var _this2 = this;
          this.clearTimer(constants.PRESS_EVENT_TIMER_NAME);
          this.setState({ isActive: false }, function() {
            var _state = _this2.state, isPositionOutside = _state.isPositionOutside, position = _state.position;
            _this2.props.onPositionChanged({
              isPositionOutside,
              position
            });
            _this2.props.onActivationChanged({ isActive: false });
          });
        }
      }, {
        key: "setPositionState",
        value: function setPositionState(position) {
          var _this3 = this;
          var offsetPosition = this.getOffsetPosition(position);
          var isPositionOutside = this.getIsPositionOutside(position);
          this.setState({
            isPositionOutside,
            position: offsetPosition
          }, function() {
            _this3.triggerOnPositionChanged();
          });
        }
      }, {
        key: "setElementDimensionsState",
        value: function setElementDimensionsState(dimensions) {
          this.setState({
            elementDimensions: dimensions
          });
        }
      }, {
        key: "schedulActivation",
        value: function schedulActivation(schedule) {
          var _this4 = this;
          var scheduleId = setTimeout(function() {
            _this4.activate();
          }, schedule);
          this.timers.push({
            id: scheduleId,
            name: constants.SET_ACTIVATION_TIMER_NAME
          });
        }
      }, {
        key: "scheduleDeactivation",
        value: function scheduleDeactivation(schedule) {
          var _this5 = this;
          var scheduleId = setTimeout(function() {
            _this5.deactivate();
          }, schedule);
          this.timers.push({
            id: scheduleId,
            name: constants.UNSET_ACTIVATION_TIMER_NAME
          });
        }
      }, {
        key: "clearActivationTimers",
        value: function clearActivationTimers() {
          this.clearTimer(constants.SET_ACTIVATION_TIMER_NAME);
          this.clearTimer(constants.UNSET_ACTIVATION_TIMER_NAME);
        }
      }, {
        key: "setPressEventTimer",
        value: function setPressEventTimer() {
          var _this6 = this;
          var _props = this.props, pressDuration = _props.pressDuration, pressMoveThreshold = _props.pressMoveThreshold;
          this.timers.push({
            name: constants.PRESS_EVENT_TIMER_NAME,
            id: setTimeout(function() {
              if (Math.abs(_this6.currentElTop - _this6.initialElTop) < pressMoveThreshold) {
                _this6.activate();
              }
            }, pressDuration)
          });
        }
      }, {
        key: "setPressEventCriteria",
        value: function setPressEventCriteria(position) {
          this.currentElTop = position.y;
        }
      }, {
        key: "initPressEventCriteria",
        value: function initPressEventCriteria(position) {
          var top = position.y;
          this.initialElTop = top;
          this.currentElTop = top;
        }
      }, {
        key: "setShouldGuardAgainstMouseEmulationByDevices",
        value: function setShouldGuardAgainstMouseEmulationByDevices() {
          this.shouldGuardAgainstMouseEmulationByDevices = true;
        }
      }, {
        key: "unsetShouldGuardAgainstMouseEmulationByDevices",
        value: function unsetShouldGuardAgainstMouseEmulationByDevices() {
          var _this7 = this;
          this.timers.push({
            name: constants.MOUSE_EMULATION_GUARD_TIMER_NAME,
            id: setTimeout(function() {
              _this7.shouldGuardAgainstMouseEmulationByDevices = false;
            }, 0)
          });
        }
      }, {
        key: "clearTimers",
        value: function clearTimers() {
          var timers = this.timers;
          while (timers.length) {
            var timer = timers.pop();
            clearTimeout(timer.id);
          }
        }
      }, {
        key: "clearTimer",
        value: function clearTimer(timerName) {
          this.timers.forEach(function(timer) {
            if (timer.name === timerName) {
              clearTimeout(timer.id);
            }
          });
        }
      }, {
        key: "getIsPositionOutside",
        value: function getIsPositionOutside(position) {
          var x = position.x, y = position.y;
          var _elementOffset = this.elementOffset, elx = _elementOffset.x, ely = _elementOffset.y;
          var _state$elementDimensi = this.state.elementDimensions, elw = _state$elementDimensi.width, elh = _state$elementDimensi.height;
          return x < elx || x > elx + elw || y < ely || y > ely + elh;
        }
      }, {
        key: "getOffsetPosition",
        value: function getOffsetPosition(position) {
          var cursorX = position.x, cursorY = position.y;
          var _elementOffset2 = this.elementOffset, offsetX = _elementOffset2.x, offsetY = _elementOffset2.y;
          return {
            x: cursorX - offsetX,
            y: cursorY - offsetY
          };
        }
      }, {
        key: "getDocumentRelativeElementOffset",
        value: function getDocumentRelativeElementOffset(el) {
          var rootEl = this.getRootOfEl(el);
          var _rootEl$getBoundingCl = rootEl.getBoundingClientRect(), docLeft = _rootEl$getBoundingCl.left, docTop = _rootEl$getBoundingCl.top;
          var _el$getBoundingClient = el.getBoundingClientRect(), elLeft = _el$getBoundingClient.left, elTop = _el$getBoundingClient.top, w = _el$getBoundingClient.width, h = _el$getBoundingClient.height;
          return {
            x: Math.abs(docLeft) + elLeft,
            y: Math.abs(docTop) + elTop,
            h,
            w
          };
        }
      }, {
        key: "getRootOfEl",
        value: function getRootOfEl(el) {
          if (el.parentElement) {
            return this.getRootOfEl(el.parentElement);
          }
          return el;
        }
      }, {
        key: "getDocumentRelativePosition",
        value: function getDocumentRelativePosition(event) {
          return {
            x: event.pageX,
            y: event.pageY
          };
        }
      }, {
        key: "getTouchEvent",
        value: function getTouchEvent(e) {
          return e.touches[0];
        }
      }, {
        key: "triggerOnPositionChanged",
        value: function triggerOnPositionChanged() {
          this.props.onPositionChanged((0, import_object.default)(this.state, "isActive"));
        }
      }, {
        key: "isReactComponent",
        value: function isReactComponent(reactElement) {
          return typeof reactElement.type === "function";
        }
      }, {
        key: "shouldDecorateChild",
        value: function shouldDecorateChild(child) {
          return !!child && this.isReactComponent(child) && this.props.shouldDecorateChildren;
        }
      }, {
        key: "decorateChild",
        value: function decorateChild(child, props) {
          return (0, import_react.cloneElement)(child, props);
        }
      }, {
        key: "decorateChildren",
        value: function decorateChildren(children, props) {
          var _this8 = this;
          return import_react.Children.map(children, function(child) {
            return _this8.shouldDecorateChild(child) ? _this8.decorateChild(child, props) : child;
          });
        }
      }, {
        key: "addEventListeners",
        value: function addEventListeners() {
          this.eventListeners.push(addEventListener(this.el, "touchstart", this.onTouchStart, { passive: false }), addEventListener(this.el, "touchmove", this.onTouchMove, { passive: false }), addEventListener(this.el, "touchend", this.onTouchEnd), addEventListener(this.el, "touchcancel", this.onTouchCancel));
        }
      }, {
        key: "removeEventListeners",
        value: function removeEventListeners() {
          while (this.eventListeners.length) {
            this.eventListeners.pop().removeEventListener();
          }
        }
      }, {
        key: "getPassThroughProps",
        value: function getPassThroughProps() {
          var ownPropNames = Object.keys(this.constructor.propTypes);
          return (0, import_object.default)(this.props, ownPropNames);
        }
      }, {
        key: "render",
        value: function render() {
          var _this9 = this;
          var _props2 = this.props, children = _props2.children, className = _props2.className, mapChildProps2 = _props2.mapChildProps, style = _props2.style;
          var props = (0, import_object_assign.default)({}, mapChildProps2(this.state), this.getPassThroughProps());
          return import_react.default.createElement(
            "div",
            {
              className,
              onMouseEnter: this.onMouseEnter,
              onMouseMove: this.onMouseMove,
              onMouseLeave: this.onMouseLeave,
              ref: function ref(el) {
                return _this9.el = el;
              },
              style: (0, import_object_assign.default)({}, style, {
                WebkitUserSelect: "none"
              })
            },
            this.decorateChildren(children, props)
          );
        }
      }]);
      return _class2;
    }(import_react.default.Component);
    _class.displayName = "ReactCursorPosition";
    _class.propTypes = {
      children: import_prop_types.default.any,
      className: import_prop_types.default.string,
      hoverDelayInMs: import_prop_types.default.number,
      hoverOffDelayInMs: import_prop_types.default.number,
      isActivatedOnTouch: import_prop_types.default.bool,
      mapChildProps: import_prop_types.default.func,
      onActivationChanged: import_prop_types.default.func,
      onPositionChanged: import_prop_types.default.func,
      onDetectedEnvironmentChanged: import_prop_types.default.func,
      pressDuration: import_prop_types.default.number,
      pressMoveThreshold: import_prop_types.default.number,
      shouldDecorateChildren: import_prop_types.default.bool,
      style: import_prop_types.default.object
    };
    _class.defaultProps = {
      isActivatedOnTouch: false,
      hoverDelayInMs: 0,
      hoverOffDelayInMs: 0,
      mapChildProps: function mapChildProps(props) {
        return props;
      },
      onActivationChanged: noop_default,
      onPositionChanged: noop_default,
      onDetectedEnvironmentChanged: noop_default,
      pressDuration: 500,
      pressMoveThreshold: 5,
      shouldDecorateChildren: true
    };
    ReactCursorPosition_default = _class;
  }
});

// node_modules/clamp/index.js
var require_clamp = __commonJS({
  "node_modules/clamp/index.js"(exports, module) {
    module.exports = clamp;
    function clamp(value, min, max) {
      return min < max ? value < min ? min : value > max ? max : value : value < max ? max : value > min ? min : value;
    }
  }
});

// node_modules/react-image-magnify/dist/Lens.js
var require_Lens = __commonJS({
  "node_modules/react-image-magnify/dist/Lens.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _objectAssign = require_object_assign();
    var _objectAssign2 = _interopRequireDefault(_objectAssign);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var Lens = function Lens2(props) {
      var fadeDurationInMs = props.fadeDurationInMs, isActive = props.isActive, isPositionOutside = props.isPositionOutside, style = props.style, translateX = props.translateX, translateY = props.translateY;
      var translate = "translate(" + translateX + "px, " + translateY + "px)";
      var computedStyle = {
        position: "absolute",
        transform: translate,
        WebkitTransform: translate,
        msTransform: translate,
        opacity: isActive && !isPositionOutside ? 1 : 0,
        transition: "opacity " + fadeDurationInMs + "ms ease-in"
      };
      var defaultStyle = {
        width: "auto",
        height: "auto",
        top: "auto",
        right: "auto",
        bottom: "auto",
        left: "auto",
        display: "block"
      };
      return _react2.default.createElement("div", { style: (0, _objectAssign2.default)({}, defaultStyle, style, computedStyle) });
    };
    Lens.propTypes = {
      style: _propTypes2.default.object,
      fadeDurationInMs: _propTypes2.default.number,
      isActive: _propTypes2.default.bool,
      translateX: _propTypes2.default.number,
      translateY: _propTypes2.default.number,
      userStyle: _propTypes2.default.object
    };
    Lens.defaultProps = {
      isActive: false,
      fadeDurationInMs: 0,
      translateX: 0,
      translateY: 0
    };
    exports.default = Lens;
  }
});

// node_modules/react-image-magnify/dist/LensTop.js
var require_LensTop = __commonJS({
  "node_modules/react-image-magnify/dist/LensTop.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _clamp = require_clamp();
    var _clamp2 = _interopRequireDefault(_clamp);
    var _objectAssign = require_object_assign();
    var _objectAssign2 = _interopRequireDefault(_objectAssign);
    var _Lens = require_Lens();
    var _Lens2 = _interopRequireDefault(_Lens);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var LensTop = function LensTop2(_ref) {
      var cursorOffset = _ref.cursorOffset, position = _ref.position, fadeDurationInMs = _ref.fadeDurationInMs, isActive = _ref.isActive, isPositionOutside = _ref.isPositionOutside, smallImage = _ref.smallImage, style = _ref.style;
      var maxHeight = smallImage.height - cursorOffset.y * 2;
      var height = (0, _clamp2.default)(position.y - cursorOffset.y, 0, maxHeight);
      var computedStyle = {
        height: height + "px",
        width: "100%",
        top: "0px"
      };
      return _react2.default.createElement(_Lens2.default, {
        fadeDurationInMs,
        isActive,
        isPositionOutside,
        style: (0, _objectAssign2.default)({}, style, computedStyle)
      });
    };
    exports.default = LensTop;
  }
});

// node_modules/react-image-magnify/dist/LensLeft.js
var require_LensLeft = __commonJS({
  "node_modules/react-image-magnify/dist/LensLeft.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _objectAssign = require_object_assign();
    var _objectAssign2 = _interopRequireDefault(_objectAssign);
    var _clamp = require_clamp();
    var _clamp2 = _interopRequireDefault(_clamp);
    var _Lens = require_Lens();
    var _Lens2 = _interopRequireDefault(_Lens);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var LensLeft = function LensLeft2(_ref) {
      var cursorOffset = _ref.cursorOffset, position = _ref.position, fadeDurationInMs = _ref.fadeDurationInMs, isActive = _ref.isActive, isPositionOutside = _ref.isPositionOutside, smallImage = _ref.smallImage, style = _ref.style;
      var height = cursorOffset.y * 2;
      var maxHeight = smallImage.height - height;
      var maxWidth = smallImage.width - cursorOffset.x * 2;
      var width = (0, _clamp2.default)(position.x - cursorOffset.x, 0, maxWidth);
      var translateY = (0, _clamp2.default)(position.y - cursorOffset.y, 0, maxHeight);
      var computedStyle = {
        height: height + "px",
        width: width + "px",
        top: "0px",
        left: "0px"
      };
      return _react2.default.createElement(_Lens2.default, {
        fadeDurationInMs,
        isActive,
        isPositionOutside,
        style: (0, _objectAssign2.default)({}, style, computedStyle),
        translateY
      });
    };
    exports.default = LensLeft;
  }
});

// node_modules/react-image-magnify/dist/LensRight.js
var require_LensRight = __commonJS({
  "node_modules/react-image-magnify/dist/LensRight.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _objectAssign = require_object_assign();
    var _objectAssign2 = _interopRequireDefault(_objectAssign);
    var _clamp = require_clamp();
    var _clamp2 = _interopRequireDefault(_clamp);
    var _Lens = require_Lens();
    var _Lens2 = _interopRequireDefault(_Lens);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var LensRight = function LensRight2(_ref) {
      var cursorOffset = _ref.cursorOffset, position = _ref.position, fadeDurationInMs = _ref.fadeDurationInMs, isActive = _ref.isActive, isPositionOutside = _ref.isPositionOutside, smallImage = _ref.smallImage, style = _ref.style;
      var height = cursorOffset.y * 2;
      var maxHeight = smallImage.height - height;
      var maxWidth = smallImage.width - cursorOffset.x * 2;
      var width = (0, _clamp2.default)(smallImage.width - position.x - cursorOffset.x, 0, maxWidth);
      var translateY = (0, _clamp2.default)(position.y - cursorOffset.y, 0, maxHeight);
      var computedStyle = {
        height: height + "px",
        width: width + "px",
        top: "0px",
        right: "0px"
      };
      return _react2.default.createElement(_Lens2.default, {
        fadeDurationInMs,
        isActive,
        isPositionOutside,
        style: (0, _objectAssign2.default)({}, style, computedStyle),
        translateY
      });
    };
    exports.default = LensRight;
  }
});

// node_modules/react-image-magnify/dist/LensBottom.js
var require_LensBottom = __commonJS({
  "node_modules/react-image-magnify/dist/LensBottom.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _objectAssign = require_object_assign();
    var _objectAssign2 = _interopRequireDefault(_objectAssign);
    var _clamp = require_clamp();
    var _clamp2 = _interopRequireDefault(_clamp);
    var _Lens = require_Lens();
    var _Lens2 = _interopRequireDefault(_Lens);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var LensBottom = function LensBottom2(_ref) {
      var cursorOffset = _ref.cursorOffset, position = _ref.position, fadeDurationInMs = _ref.fadeDurationInMs, isActive = _ref.isActive, isPositionOutside = _ref.isPositionOutside, smallImage = _ref.smallImage, style = _ref.style;
      var maxHeight = smallImage.height - cursorOffset.y * 2;
      var height = (0, _clamp2.default)(smallImage.height - position.y - cursorOffset.y, 0, maxHeight);
      var top = Math.max(position.y + cursorOffset.y, cursorOffset.y * 2);
      var computedStyle = {
        height: height + "px",
        width: "100%",
        top
      };
      return _react2.default.createElement(_Lens2.default, {
        fadeDurationInMs,
        isActive,
        isPositionOutside,
        style: (0, _objectAssign2.default)({}, style, computedStyle)
      });
    };
    exports.default = LensBottom;
  }
});

// node_modules/react-image-magnify/dist/ImageLensShaded.js
var require_ImageLensShaded = __commonJS({
  "node_modules/react-image-magnify/dist/ImageLensShaded.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = ImageLensShaded;
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _objectAssign = require_object_assign();
    var _objectAssign2 = _interopRequireDefault(_objectAssign);
    var _LensTop = require_LensTop();
    var _LensTop2 = _interopRequireDefault(_LensTop);
    var _LensLeft = require_LensLeft();
    var _LensLeft2 = _interopRequireDefault(_LensLeft);
    var _LensRight = require_LensRight();
    var _LensRight2 = _interopRequireDefault(_LensRight);
    var _LensBottom = require_LensBottom();
    var _LensBottom2 = _interopRequireDefault(_LensBottom);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function ImageLensShaded(_ref) {
      var cursorOffset = _ref.cursorOffset, fadeDurationInMs = _ref.fadeDurationInMs, isActive = _ref.isActive, isPositionOutside = _ref.isPositionOutside, position = _ref.position, smallImage = _ref.smallImage, style = _ref.style;
      var compositLensStyle = (0, _objectAssign2.default)({
        backgroundColor: "rgba(0,0,0,.4)"
      }, style);
      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(_LensTop2.default, {
          cursorOffset,
          fadeDurationInMs,
          isActive,
          isPositionOutside,
          position,
          smallImage,
          style: compositLensStyle
        }),
        _react2.default.createElement(_LensLeft2.default, {
          cursorOffset,
          fadeDurationInMs,
          isActive,
          isPositionOutside,
          position,
          smallImage,
          style: compositLensStyle
        }),
        _react2.default.createElement(_LensRight2.default, {
          cursorOffset,
          fadeDurationInMs,
          isActive,
          isPositionOutside,
          position,
          smallImage,
          style: compositLensStyle
        }),
        _react2.default.createElement(_LensBottom2.default, {
          cursorOffset,
          fadeDurationInMs,
          isActive,
          isPositionOutside,
          position,
          smallImage,
          style: compositLensStyle
        })
      );
    }
  }
});

// node_modules/react-image-magnify/dist/ImageShape.js
var require_ImageShape = __commonJS({
  "node_modules/react-image-magnify/dist/ImageShape.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports.default = _propTypes2.default.shape({
      alt: _propTypes2.default.string,
      src: _propTypes2.default.string.isRequired,
      srcSet: _propTypes2.default.string,
      sizes: _propTypes2.default.string,
      width: _propTypes2.default.number.required,
      height: _propTypes2.default.number.required,
      onLoad: _propTypes2.default.func
    });
  }
});

// node_modules/react-image-magnify/dist/Point.js
var require_Point = __commonJS({
  "node_modules/react-image-magnify/dist/Point.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports.default = _propTypes2.default.shape({
      x: _propTypes2.default.number.isRequired,
      y: _propTypes2.default.number.isRequired
    });
  }
});

// node_modules/react-image-magnify/dist/noop.js
var require_noop = __commonJS({
  "node_modules/react-image-magnify/dist/noop.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = function() {
    };
  }
});

// node_modules/react-image-magnify/dist/EnlargedImage.js
var require_EnlargedImage = __commonJS({
  "node_modules/react-image-magnify/dist/EnlargedImage.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _createClass2 = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _objectAssign = require_object_assign();
    var _objectAssign2 = _interopRequireDefault(_objectAssign);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _clamp = require_clamp();
    var _clamp2 = _interopRequireDefault(_clamp);
    var _ImageShape = require_ImageShape();
    var _ImageShape2 = _interopRequireDefault(_ImageShape);
    var _Point = require_Point();
    var _Point2 = _interopRequireDefault(_Point);
    var _noop = require_noop();
    var _noop2 = _interopRequireDefault(_noop);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck2(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn2(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits2(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var _class2 = function(_React$Component) {
      _inherits2(_class3, _React$Component);
      function _class3(props) {
        _classCallCheck2(this, _class3);
        var _this = _possibleConstructorReturn2(this, (_class3.__proto__ || Object.getPrototypeOf(_class3)).call(this, props));
        _this.state = {
          isTransitionEntering: false,
          isTransitionActive: false,
          isTransitionLeaving: false,
          isTransitionDone: false
        };
        _this.timers = [];
        return _this;
      }
      _createClass2(_class3, [{
        key: "componentWillReceiveProps",
        value: function componentWillReceiveProps(nextProps) {
          var _this2 = this;
          var _props = this.props, fadeDurationInMs = _props.fadeDurationInMs, isActive = _props.isActive, isPositionOutside = _props.isPositionOutside;
          if (isActive === nextProps.isActive && isPositionOutside === nextProps.isPositionOutside) {
            return;
          }
          if (nextProps.isActive && !nextProps.isPositionOutside) {
            this.setState({
              isTrainsitionDone: false,
              isTransitionEntering: true
            });
            this.timers.push(setTimeout(function() {
              _this2.setState({
                isTransitionEntering: false,
                isTransitionActive: true
              });
            }, 0));
          } else {
            this.setState({
              isTransitionLeaving: true,
              isTransitionActive: false
            });
            this.timers.push(setTimeout(function() {
              _this2.setState({
                isTransitionDone: true,
                isTransitionLeaving: false
              });
            }, fadeDurationInMs));
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.timers.forEach(function(timerId) {
            clearTimeout(timerId);
          });
        }
      }, {
        key: "render",
        value: function render() {
          var _props2 = this.props, containerClassName = _props2.containerClassName, containerStyle = _props2.containerStyle, cursorOffset = _props2.cursorOffset, position = _props2.position, fadeDurationInMs = _props2.fadeDurationInMs, imageClassName = _props2.imageClassName, imageStyle = _props2.imageStyle, isLazyLoaded = _props2.isLazyLoaded, largeImage = _props2.largeImage, _props2$largeImage$on = _props2.largeImage.onLoad, onLoad = _props2$largeImage$on === void 0 ? _noop2.default : _props2$largeImage$on, smallImage = _props2.smallImage, imagePosition = _props2.imagePosition;
          var _state = this.state, isTransitionEntering = _state.isTransitionEntering, isTransitionActive = _state.isTransitionActive, isTransitionLeaving = _state.isTransitionLeaving;
          var offsetRatio = {
            x: largeImage.width / smallImage.width,
            y: largeImage.height / smallImage.height
          };
          var differentiatedImageCoordinates = {
            x: Math.round((position.x - cursorOffset.x) * offsetRatio.x) * -1,
            y: Math.round((position.y - cursorOffset.y) * offsetRatio.y) * -1
          };
          var minCoordinates = {
            x: (largeImage.width - smallImage.width) * -1,
            y: (largeImage.height - smallImage.height) * -1
          };
          var maxCoordinate = 0;
          var imageCoordinates = {
            x: (0, _clamp2.default)(differentiatedImageCoordinates.x, minCoordinates.x, maxCoordinate),
            y: (0, _clamp2.default)(differentiatedImageCoordinates.y, minCoordinates.y, maxCoordinate)
          };
          var isVisible = void 0;
          if (isTransitionEntering || isTransitionActive || isTransitionLeaving) {
            isVisible = true;
          } else {
            isVisible = false;
          }
          var defaultContainerStyle = {
            position: "absolute",
            top: "0px",
            overflow: "hidden"
          };
          switch (imagePosition) {
            case "over":
              defaultContainerStyle = (0, _objectAssign2.default)({}, defaultContainerStyle, {
                left: "0px"
              });
              break;
            case "beside":
            default:
              defaultContainerStyle = (0, _objectAssign2.default)({}, defaultContainerStyle, {
                left: "100%",
                marginLeft: "10px",
                border: "1px solid #d6d6d6"
              });
              break;
          }
          var computedContainerStyle = {
            width: smallImage.width,
            height: smallImage.height,
            opacity: this.state.isTransitionActive ? 1 : 0,
            transition: "opacity " + fadeDurationInMs + "ms ease-in",
            pointerEvents: "none"
          };
          var translate = "translate(" + imageCoordinates.x + "px, " + imageCoordinates.y + "px)";
          var computedImageStyle = {
            width: largeImage.width,
            height: largeImage.height,
            transform: translate,
            WebkitTransform: translate,
            msTransform: translate,
            pointerEvents: "none"
          };
          var component = _react2.default.createElement(
            "div",
            {
              className: containerClassName,
              style: (0, _objectAssign2.default)({}, defaultContainerStyle, containerStyle, computedContainerStyle)
            },
            _react2.default.createElement("img", {
              alt: largeImage.alt,
              className: imageClassName,
              src: largeImage.src,
              srcSet: largeImage.srcSet,
              sizes: largeImage.sizes,
              style: (0, _objectAssign2.default)({}, imageStyle, computedImageStyle),
              onLoad
            })
          );
          if (isLazyLoaded) {
            return isVisible ? component : null;
          }
          return component;
        }
      }]);
      return _class3;
    }(_react2.default.Component);
    _class2.displayName = "EnlargedImage";
    _class2.defaultProps = {
      fadeDurationInMs: 0,
      isLazyLoaded: true
    };
    _class2.propTypes = {
      containerClassName: _propTypes2.default.string,
      containerStyle: _propTypes2.default.object,
      cursorOffset: _Point2.default,
      position: _Point2.default,
      fadeDurationInMs: _propTypes2.default.number,
      imageClassName: _propTypes2.default.string,
      imageStyle: _propTypes2.default.object,
      isActive: _propTypes2.default.bool,
      isLazyLoaded: _propTypes2.default.bool,
      largeImage: _ImageShape2.default,
      smallImage: _ImageShape2.default,
      imagePosition: _propTypes2.default.oneOf(["beside", "over"])
    };
    exports.default = _class2;
  }
});

// node_modules/react-image-magnify/dist/ReactImageMagnify.js
var require_ReactImageMagnify = __commonJS({
  "node_modules/react-image-magnify/dist/ReactImageMagnify.js"(exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _createClass2 = /* @__PURE__ */ function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _reactRequiredIf = require_react_required_if();
    var _reactRequiredIf2 = _interopRequireDefault(_reactRequiredIf);
    var _reactCursorPosition = (init_ReactCursorPosition(), __toCommonJS(ReactCursorPosition_exports));
    var _reactCursorPosition2 = _interopRequireDefault(_reactCursorPosition);
    var _objectAssign = require_object_assign();
    var _objectAssign2 = _interopRequireDefault(_objectAssign);
    var _ImageLensShaded = require_ImageLensShaded();
    var _ImageLensShaded2 = _interopRequireDefault(_ImageLensShaded);
    var _EnlargedImage = require_EnlargedImage();
    var _EnlargedImage2 = _interopRequireDefault(_EnlargedImage);
    var _ImageShape = require_ImageShape();
    var _ImageShape2 = _interopRequireDefault(_ImageShape);
    var _noop = require_noop();
    var _noop2 = _interopRequireDefault(_noop);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck2(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn2(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits2(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var ReactImageMagnify = function(_React$Component) {
      _inherits2(ReactImageMagnify2, _React$Component);
      function ReactImageMagnify2(props) {
        _classCallCheck2(this, ReactImageMagnify2);
        var _this = _possibleConstructorReturn2(this, (ReactImageMagnify2.__proto__ || Object.getPrototypeOf(ReactImageMagnify2)).call(this, props));
        _this.state = {
          smallImageWidth: 0,
          smallImageHeight: 0,
          detectedEnvironment: {
            isMouseDeteced: false,
            isTouchDetected: false
          },
          isActive: false
        };
        _this.onSmallImageLoad = _this.onSmallImageLoad.bind(_this);
        _this.setSmallImageDimensionState = _this.setSmallImageDimensionState.bind(_this);
        _this.onDetectedEnvironmentChanged = _this.onDetectedEnvironmentChanged.bind(_this);
        _this.onActivationChanged = _this.onActivationChanged.bind(_this);
        return _this;
      }
      _createClass2(ReactImageMagnify2, [{
        key: "onSmallImageLoad",
        value: function onSmallImageLoad(e) {
          var _props$smallImage$onL = this.props.smallImage.onLoad, onLoad = _props$smallImage$onL === void 0 ? _noop2.default : _props$smallImage$onL;
          onLoad(e);
          if (!this.props.smallImage.isFluidWidth) {
            return;
          }
          this.setSmallImageDimensionState();
        }
      }, {
        key: "setSmallImageDimensionState",
        value: function setSmallImageDimensionState() {
          var _smallImageEl = this.smallImageEl, smallImageWidth = _smallImageEl.offsetWidth, smallImageHeight = _smallImageEl.offsetHeight;
          this.setState({
            smallImageWidth,
            smallImageHeight
          });
        }
      }, {
        key: "onDetectedEnvironmentChanged",
        value: function onDetectedEnvironmentChanged(detectedEnvironment) {
          this.setState({
            detectedEnvironment
          });
        }
      }, {
        key: "onActivationChanged",
        value: function onActivationChanged(_ref) {
          var isActive = _ref.isActive;
          this.setState({
            isActive
          });
        }
      }, {
        key: "getEnlargedImagePlacement",
        value: function getEnlargedImagePlacement() {
          var enlargedImagePosition = this.props.enlargedImagePosition;
          var isTouchDetected = this.state.detectedEnvironment.isTouchDetected;
          return enlargedImagePosition || (isTouchDetected ? "over" : "beside");
        }
      }, {
        key: "componentDidMount",
        value: function componentDidMount() {
          if (this.props.smallImage.isFluidWidth) {
            this.setSmallImageDimensionState();
            window.addEventListener("resize", this.setSmallImageDimensionState);
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          window.removeEventListener("resize", this.setSmallImageDimensionState);
        }
      }, {
        key: "getCursorOffsetDimension",
        value: function getCursorOffsetDimension(smallImageDimension, largeImageDimension) {
          return Math.round(smallImageDimension / largeImageDimension * smallImageDimension / 2);
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;
          var _props = this.props, className = _props.className, enlargedImageContainerClassName = _props.enlargedImageContainerClassName, enlargedImageContainerStyle = _props.enlargedImageContainerStyle, enlargedImageClassName = _props.enlargedImageClassName, enlargedImageStyle = _props.enlargedImageStyle, fadeDurationInMs = _props.fadeDurationInMs, hoverDelayInMs = _props.hoverDelayInMs, hoverOffDelayInMs = _props.hoverOffDelayInMs, isActivatedOnTouch = _props.isActivatedOnTouch, imageClassName = _props.imageClassName, imageStyle = _props.imageStyle, largeImage = _props.largeImage, lensStyle = _props.lensStyle, pressDuration = _props.pressDuration, pressMoveThreshold = _props.pressMoveThreshold, isSmallImageFluidWidth = _props.smallImage.isFluidWidth, style = _props.style;
          var _state = this.state, smallImageWidth = _state.smallImageWidth, smallImageHeight = _state.smallImageHeight, isTouchDetected = _state.detectedEnvironment.isTouchDetected;
          var fluidWidthSmallImage = (0, _objectAssign2.default)({}, this.props.smallImage, {
            width: smallImageWidth,
            height: smallImageHeight
          });
          var fixedWidthSmallImage = this.props.smallImage;
          var smallImage = isSmallImageFluidWidth ? fluidWidthSmallImage : fixedWidthSmallImage;
          var cursorOffset = {
            x: this.getCursorOffsetDimension(smallImage.width, largeImage.width),
            y: this.getCursorOffsetDimension(smallImage.height, largeImage.height)
          };
          var fluidWidthContainerStyle = {
            width: "auto",
            height: "auto",
            fontSize: "0px",
            position: "relative"
          };
          var fixedWidthContainerStyle = {
            width: smallImage.width + "px",
            height: smallImage.height + "px",
            position: "relative"
          };
          var priorityContainerStyle = isSmallImageFluidWidth ? fluidWidthContainerStyle : fixedWidthContainerStyle;
          var compositContainerStyle = (0, _objectAssign2.default)({
            cursor: "crosshair"
          }, style, priorityContainerStyle);
          var fluidWidthSmallImageStyle = {
            width: "100%",
            height: "auto",
            display: "block",
            pointerEvents: "none"
          };
          var fixedWidthSmallImageStyle = {
            width: smallImage.width + "px",
            height: smallImage.height + "px",
            pointerEvents: "none"
          };
          var prioritySmallImageStyle = isSmallImageFluidWidth ? fluidWidthSmallImageStyle : fixedWidthSmallImageStyle;
          var compositSmallImageStyle = (0, _objectAssign2.default)({}, imageStyle, prioritySmallImageStyle);
          var enlargedImagePlacement = this.getEnlargedImagePlacement();
          var shouldShowLens = enlargedImagePlacement !== "over" && !isTouchDetected;
          return _react2.default.createElement(
            _reactCursorPosition2.default,
            {
              className,
              hoverDelayInMs,
              hoverOffDelayInMs,
              isActivatedOnTouch,
              onActivationChanged: this.onActivationChanged,
              onDetectedEnvironmentChanged: this.onDetectedEnvironmentChanged,
              pressDuration,
              pressMoveThreshold,
              style: compositContainerStyle
            },
            _react2.default.createElement("img", {
              src: smallImage.src,
              srcSet: smallImage.srcSet,
              sizes: smallImage.sizes,
              alt: smallImage.alt,
              className: imageClassName,
              style: compositSmallImageStyle,
              ref: function ref(el) {
                return _this2.smallImageEl = el;
              },
              onLoad: this.onSmallImageLoad
            }),
            shouldShowLens && _react2.default.createElement(_ImageLensShaded2.default, {
              cursorOffset,
              fadeDurationInMs,
              smallImage,
              style: lensStyle
            }),
            _react2.default.createElement(_EnlargedImage2.default, {
              containerClassName: enlargedImageContainerClassName,
              containerStyle: enlargedImageContainerStyle,
              cursorOffset,
              fadeDurationInMs,
              imageClassName: enlargedImageClassName,
              imageStyle: enlargedImageStyle,
              imagePosition: enlargedImagePlacement,
              largeImage,
              smallImage
            })
          );
        }
      }]);
      return ReactImageMagnify2;
    }(_react2.default.Component);
    ReactImageMagnify.propTypes = {
      className: _propTypes2.default.string,
      enlargedImageContainerClassName: _propTypes2.default.string,
      enlargedImageContainerStyle: _propTypes2.default.object,
      enlargedImageClassName: _propTypes2.default.string,
      enlargedImageStyle: _propTypes2.default.object,
      fadeDurationInMs: _propTypes2.default.number,
      hoverDelayInMs: _propTypes2.default.number,
      hoverOffDelayInMs: _propTypes2.default.number,
      isActivatedOnTouch: _propTypes2.default.bool,
      imageClassName: _propTypes2.default.string,
      imageStyle: _propTypes2.default.object,
      largeImage: _ImageShape2.default,
      lensStyle: _propTypes2.default.object,
      pressDuration: _propTypes2.default.number,
      pressMoveThreshold: _propTypes2.default.number,
      smallImage: _propTypes2.default.shape({
        alt: _propTypes2.default.string,
        isFluidWidth: _propTypes2.default.bool,
        src: _propTypes2.default.string.isRequired,
        srcSet: _propTypes2.default.string,
        sizes: _propTypes2.default.string,
        width: (0, _reactRequiredIf2.default)(_propTypes2.default.number, function(props) {
          return !props.isFluidWidth;
        }),
        height: (0, _reactRequiredIf2.default)(_propTypes2.default.number, function(props) {
          return !props.isFluidWidth;
        }),
        onLoad: _propTypes2.default.func
      }),
      style: _propTypes2.default.object,
      enlargedImagePosition: _propTypes2.default.oneOf(["beside", "over"])
    };
    ReactImageMagnify.defaultProps = {
      fadeDurationInMs: 300,
      hoverDelayInMs: 250,
      hoverOffDelayInMs: 150
    };
    exports.default = ReactImageMagnify;
  }
});
export default require_ReactImageMagnify();
/*! Bundled license information:

object-assign/index.js:
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)

isobject/index.js:
  (*!
   * isobject <https://github.com/jonschlinkert/isobject>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   *)

is-plain-object/index.js:
  (*!
   * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   *)

is-extendable/index.js:
  (*!
   * is-extendable <https://github.com/jonschlinkert/is-extendable>
   *
   * Copyright (c) 2015-2017, Jon Schlinkert.
   * Released under the MIT License.
   *)

object.omit/index.js:
  (*!
   * object.omit <https://github.com/jonschlinkert/object.omit>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   *)
*/
//# sourceMappingURL=react-image-magnify.js.map
